{% for namespace in ["security", "flux-system"] %}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/namespace-v1.json
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
{% endfor %}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/secret-v1.json
apiVersion: v1
kind: Secret
metadata:
  name: bitwarden
  namespace: security
stringData:
  # this can NOT end in a newline or it doesn't work
  token: {{ ENV['bitwarden_machine_key'] }}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/secret-v1.json
apiVersion: v1
kind: Secret
metadata:
  name: {{ ENV['cluster_secrets'] | split('SECRET_DOMAIN: ') | last | split('\n') | first | replace('.', '-') | safe }}-tls
  namespace: network
  annotations:
    cert-manager.io/alt-names: "*.{{ ENV['cluster_secrets'] | split('SECRET_DOMAIN: ') | last | split('\n') | first | safe }},{{ ENV['cluster_secrets'] | split('SECRET_DOMAIN: ') | last | split('\n') | first | safe }}"
    cert-manager.io/certificate-name: {{ ENV['cluster_secrets'] | split('SECRET_DOMAIN: ') | last | split('\n') | first | replace('.', '-') | safe }}
    cert-manager.io/common-name: {{ ENV['cluster_secrets'] | split('SECRET_DOMAIN: ') | last | split('\n') | first | safe }}
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt
    cert-manager.io/uri-sans: ""
  labels:
    controller.cert-manager.io/fao: "true"
type: kubernetes.io/tls
# this get saved as json, but yaml is a super-set of json so we can just directly import it :)
data: {{ ENV['lets_encrypt_tls'] | safe}}
