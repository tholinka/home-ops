---
# yaml-language-server: $schema=https://json.schemastore.org/helmfile

helmDefaults:
  cleanupOnFail: true
  timeout: 600
  force: true
  wait: true
  waitForJobs: true

repositories:
  - name: mittwald
    url: https://helm.mittwald.de

releases:
  - name: cilium
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/home-operations/charts-mirror/cilium
    version: 1.17.3
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/kube-system/cilium/app/helm/values.yaml'
    hooks:
      - # Wait for cilium CRDs to be available
        events: ['postsync']
        command: bash
        args:
          - -c
          - until kubectl get crd ciliumbgppeeringpolicies.cilium.io ciliuml2announcementpolicies.cilium.io ciliumloadbalancerippools.cilium.io &>/dev/null; do sleep 10; done
        showlogs: true
      - # Apply cilium network configuration
        events: ['postsync']
        command: kubectl
        args:
          - apply
          - --namespace=kube-system
          - --server-side
          - --field-manager=kustomize-controller
          - --filename={{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/kube-system/cilium/app/networks.yaml
        showlogs: true

  - name: coredns
    namespace: kube-system
    atomic: true
    chart: oci://ghcr.io/coredns/charts/coredns
    version: 1.40.0
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/kube-system/coredns/app/helm/values.yaml'
    needs: ['kube-system/cilium']

  - name: spegel
    namespace: system
    atomic: true
    chart: oci://ghcr.io/spegel-org/helm-charts/spegel
    version: 0.1.1
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/system/spegel/app/helm/values.yaml'
    needs: ['kube-system/coredns']

  - name: cert-manager
    namespace: security
    atomic: true
    chart: oci://quay.io/jetstack/charts/cert-manager
    version: v1.17.2
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/security/cert-manager/app/helm/values.yaml'
    hooks:
      - # Wait for external-secrets CRDs to be available
        events: ['postsync']
        command: bash
        args:
          - -c
          - until kubectl get crd clusterissuers.cert-manager.io &>/dev/null; do sleep 10; done
        showlogs: true
      - # Apply cluster secret store configuration
        # technically we only really need this now for bitwarden, so we could just wait for flux to do it
        # but it makes the bootstrap faster to just do it now
        events: ['postsync']
        command: kubectl
        args:
          - apply
          - --namespace=security
          - --server-side
          - --field-manager=kustomize-controller
          - --filename={{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/security/cert-manager/app/clusterissuers.yaml
        showlogs: true
    needs: ['system/spegel']

  - name: reflector
    namespace: system
    chart: oci://ghcr.io/home-operations/charts-mirror/reflector
    version: 9.0.342
    needs: ['security/cert-manager']

  - name: external-secrets
    namespace: security
    atomic: true
    chart: oci://ghcr.io/external-secrets/charts/external-secrets
    version: 0.16.1
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/security/external-secrets/app/helm/values.yaml'
    hooks:
      - # Wait for external-secrets CRDs to be available
        events: ['postsync']
        command: bash
        args:
          - -c
          - until kubectl get crd clustersecretstores.external-secrets.io &>/dev/null; do sleep 10; done
        showlogs: true
      - # Apply cluster secret store configuration
        events: ['postsync']
        command: kubectl
        args:
          - apply
          - --namespace=security
          - --server-side
          - --field-manager=kustomize-controller
          - --kustomize={{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/external-secrets/external-secrets/store/
        showlogs: true
    needs: ['system/reflector']

  - name: flux-operator
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-operator
    version: 0.19.0
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/flux-system/flux-operator/app/helm/values.yaml'
    needs: ['external-secrets/external-secrets']

  - name: flux-instance
    namespace: flux-system
    atomic: true
    chart: oci://ghcr.io/controlplaneio-fluxcd/charts/flux-instance
    version: 0.19.0
    values:
      - '{{ requiredEnv "ROOT_DIR" }}/kubernetes/apps/flux-system/flux-operator/instance/helm/values.yaml'
    needs: ['flux-system/flux-operator']
    wait: false
