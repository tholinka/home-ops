---
# yaml-language-server: $schema=https://schemas.tholinka.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &secret paperless
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden
  target:
    name: *secret
    creationPolicy: Owner
    template:
      data:
        # DB Init
        INIT_POSTGRES_DBNAME: &dbname paperless
        INIT_POSTGRES_HOST: &dbhost postgres-cluster-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: &dbuser '{{ .PAPERLESS_POSTGRES_USER }}'
        INIT_POSTGRES_PASS: &dbpass '{{ .PAPERLESS_POSTGRES_PASS }}'

        # Paperless Postgres
        PAPERLESS_DBENGINE: postgresql
        PAPERLESS_DBPORT: '5432'
        PAPERLESS_DBNAME: *dbname
        PAPERLESS_DBHOST: *dbhost
        PAPERLESS_DBUSER: *dbuser
        PAPERLESS_DBPASS: *dbpass

        # Paperless
        PAPERLESS_ADMIN_USER: '{{ .PAPERLESS_ADMIN_USER }}'
        PAPERLESS_ADMIN_PASSWORD: '{{ .PAPERLESS_ADMIN_PASSWORD }}'
        PAPERLESS_SECRET_KEY: '{{ .PAPERLESS_SECRET_KEY }}'
        PAPERLESS_SOCIALACCOUNT_PROVIDERS: >
          {
            "openid_connect": {
              "APPS": [
                {
                  "provider_id": "authentik",
                  "name": "Authentik",
                  "client_id": "{{ .PAPERLESS_OAUTH_CLIENT_ID }}",
                  "secret": "{{ .PAPERLESS_OAUTH_CLIENT_SECRET }}",
                  "settings": {
                    "server_url": "https://auth.${SECRET_DOMAIN}/application/o/paperless/.well-known/openid-configuration"
                  }
                }
              ]
            }
          }
  dataFrom:
    - extract:
        key: paperless
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: &secret paperless-initdb
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: bitwarden
  target:
    name: *secret
    creationPolicy: Owner
    template:
      data:
        INIT_POSTGRES_SUPER_USER: '{{ .POSTGRES_SUPER_USER }}'
        INIT_POSTGRES_SUPER_PASS: '{{ .POSTGRES_SUPER_PASS }}'
  dataFrom:
    - extract:
        key: cloudnative_pg
