---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: immich-init
  namespace: &namespace self-hosted
spec:
  interval: 1h
  path: ./kubernetes/apps/self-hosted/immich/init
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  dependsOn:
    - name: crds-ready
      namespace: flux-system
  healthChecks:
    - apiVersion: &esVersion external-secrets.io/v1
      kind: &esKind ExternalSecret
      name: immich-postgres-user
      namespace: *namespace
  healthCheckExprs:
    - apiVersion: *esVersion
      kind: *esKind
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app postgres-immich
  namespace: &namespace self-hosted
spec:
  interval: 1h
  path: ./kubernetes/apps/self-hosted/immich/db
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  dependsOn:
    - name: cnpg-crds
      namespace: database
    - name: openebs
      namespace: openebs-system
    - name: immich-init
      namespace: *namespace
  postBuild:
    substitute:
      APP: immich
      CNPG_REPLICAS: '2'
      CNPG_IMAGE: ghcr.io/tensorchord/cloudnative-vectorchord
      # on upgrade of vectorchord, run: k exec -n self-hosted postgres-immich-1 -- psql -d immich -c 'ALTER EXTENSION vchord UPDATE;'
      # renovate: datasource=docker depName=ghcr.io/tensorchord/cloudnative-vectorchord
      CNPG_VERSION: 17.5-0.4.2@sha256:4a6f5ca2212018322823a92250230d471e2fa33c287ed8b400bd58a3cc3a4e6b
      CNPG_SIZE: 5Gi
      CNPG_LIMITS_MEMORY_HUGEPAGES: 512Mi
      CNPG_LIMITS_MEMORY: 1Gi
  components:
    - ../../../../components/cnpg/backup
  healthChecks:
    - apiVersion: &postgresVersion postgresql.cnpg.io/v1
      kind: &postgresKind Cluster
      name: *app
      namespace: *namespace
  healthCheckExprs:
    - apiVersion: *postgresVersion
      kind: *postgresKind
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app immich
  namespace: &namespace self-hosted
spec:
  components:
    # also cpu scales the api, which is fine, but theoretically only really need to scale the microservices
    # needs https://github.com/immich-app/immich-charts/issues/94
    - ../../../../components/keda/nfs-cpu-scaler
  dependsOn:
    - name: keda
      namespace: observability
    - name: dragonfly-cluster
      namespace: database
    - name: postgres-immich
      namespace: *namespace
  interval: 1h
  path: ./kubernetes/apps/self-hosted/immich/app
  postBuild:
    substitute:
      APP: *app
      SCALER_NAME: immich-server
      SCALER_MAX_REPLICAS: '5'
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
