---
# yaml-language-server: $schema=https://schemas.tholinka.dev/gateway.networking.k8s.io/gatewayclass_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: GatewayClass
metadata:
  name: envoy
spec:
  controllerName: gateway.envoyproxy.io/gatewayclass-controller
  parametersRef:
    group: gateway.envoyproxy.io
    kind: EnvoyProxy
    name: config
    namespace: network
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/gateway.networking.k8s.io/gateway_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: internal
  labels:
    type: internal
  annotations:
    external-dns.alpha.kubernetes.io/target: &hostname internal.${SECRET_DOMAIN}
spec:
  gatewayClassName: envoy
  # addresses:
  #   - type: IPAddress
  #     value: 192.168.20.3
  #   - type: IPAddress
  #     value: ::ffff:192.168.20.3
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: *hostname
      # cilium seems to add an ip to the addresses in spec.addresses unless this is set
      # which causes only the first ipv4 address (e.g. 192.168.20.1) to work
      lbipam.cilium.io/ips: 192.168.20.3,::ffff:192.168.20.3
  listeners:
    - name: http-root
      protocol: HTTP
      port: 80
      hostname: '${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: Same
    - name: https-root
      protocol: HTTPS
      port: 443
      hostname: '${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${SECRET_DOMAIN/./-}-tls
    - name: http
      protocol: HTTP
      port: 80
      hostname: '*.${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: Same
    - name: https
      protocol: HTTPS
      port: 443
      hostname: '*.${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${SECRET_DOMAIN/./-}-tls
    - name: tls-unifi
      protocol: TLS
      port: 443
      hostname: 'unifi.${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: Same
      tls:
        mode: Passthrough
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/gateway.networking.k8s.io/gateway_v1.json
apiVersion: gateway.networking.k8s.io/v1
kind: Gateway
metadata:
  name: external
  labels:
    type: external
  annotations:
    external-dns.alpha.kubernetes.io/target: &hostname external.${SECRET_DOMAIN}
spec:
  gatewayClassName: envoy
  # addresses:
  #   - type: IPAddress
  #     value: 192.168.20.4
  #   - type: IPAddress
  #     value: ::ffff:192.168.20.4
  infrastructure:
    annotations:
      external-dns.alpha.kubernetes.io/hostname: *hostname
      # cilium seems to add an ip to the addresses in spec.addresses unless this is set
      # which causes only the first ipv4 address (e.g. 192.168.20.1) to work
      lbipam.cilium.io/ips: 192.168.20.4,::ffff:192.168.20.4
  listeners:
    - name: http
      protocol: HTTP
      port: 80
      hostname: '*.${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: Same
    - name: https
      protocol: HTTPS
      port: 443
      hostname: '*.${SECRET_DOMAIN}'
      allowedRoutes:
        namespaces:
          from: All
      tls:
        certificateRefs:
          - kind: Secret
            name: ${SECRET_DOMAIN/./-}-tls
