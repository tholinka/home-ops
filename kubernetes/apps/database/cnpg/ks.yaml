# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &name cnpg-crds
  namespace: &namespace database
spec:
  targetNamespace: *namespace
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  path: ./kubernetes/apps/database/cnpg/crds
  interval: 1h
  retryInterval: 2m
  timeout: 5m
  healthChecks:
    - &crds
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: clusters.postgresql.cnpg.io
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app cnpg
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 1h
  retryInterval: 2m
  path: ./kubernetes/apps/database/cnpg/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app postgres-cluster
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 1h
  retryInterval: 2m
  path: ./kubernetes/apps/database/cnpg/cluster
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  dependsOn:
    - name: cnpg-crds
      namespace: database
    - name: openebs
      namespace: openebs-system
  postBuild:
    substitute:
      APP: cluster
      # renovate: datasource=docker depName=ghcr.io/cloudnative-pg/postgresql
      CNPG_VERSION: 17.5-bookworm
      # standard is the new image style, but it doesn't have barman installed, so TODO switch after migrating to new backup plugin
      #CNPG_VERSION: 17.5-standard-bookworm@sha256:8bcc3eb5b0b2dd7ad91c3c57eadc0df37148f28be16fc8062ed5eb29a2a4a4b7
      CNPG_REPLICAS: '2'
      CNPG_SIZE: 5Gi
      CNPG_CLUSTER_CURRENT: v1
      CNPG_CLUSTER_PREVIOUS: v0
      CNPG_LIMITS_MEMORY_HUGEPAGES: 1Gi
      CNPG_LIMITS_MEMORY: 2Gi
  components:
    - ../../../../components/cnpg/restore
  healthChecks:
    - apiVersion: &postgresVersion postgresql.cnpg.io/v1
      kind: &postgresKind Cluster
      name: *app
      namespace: *namespace
  healthCheckExprs:
    - apiVersion: *postgresVersion
      kind: *postgresKind
      failed: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'False')
      current: status.conditions.filter(e, e.type == 'Ready').all(e, e.status == 'True')
  patches:
    # note: remove bootstrap when switching to restore. could probably also remove managed and the init step, since the user is already created?
    - target:
        kind: *postgresKind
      patch: |-
        kind: Cluster
        metadata:
          name: not-used
        spec:
          bootstrap:
            recovery:
              recoveryTarget:
                targetTime: "2025-05-23 19:00:00.000000-05:00"

---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app pgadmin
  namespace: &namespace database
spec:
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  interval: 1h
  retryInterval: 2m
  path: ./kubernetes/apps/database/cnpg/pgadmin
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  timeout: 5m
  postBuild:
    substitute:
      APP: *app
      VOLSYNC_CAPACITY: 2Gi
      GATUS_SUBDOMAIN: pg
  components:
    - ../../../../components/volsync
    - ../../../../components/gatus/guarded
    - ../../../../components/gatus/internal
