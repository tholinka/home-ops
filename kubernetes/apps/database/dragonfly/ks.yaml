---
# yaml-language-server: $schema=https://schemas.tholinka.dev/source.toolkit.fluxcd.io/gitrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: GitRepository
metadata:
  name: dragonfly-crds
spec:
  interval: 30m
  url: https://github.com/dragonflydb/dragonfly-operator.git
  ref:
    tag: v1.3.0
  ignore: |
    # exclude
    /*
    # include
    !manifests/crd.yaml
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app dragonfly-crds
  namespace: &namespace database
spec:
  targetNamespace: *namespace
  prune: true
  sourceRef:
    kind: GitRepository
    name: *app
  interval: 1h
  healthChecks:
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: dragonflies.dragonflydb.io
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: dragonfly
  namespace: &namespace database
spec:
  interval: 1h
  path: ./kubernetes/apps/database/dragonfly/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  dependsOn:
    - name: dragonfly-crds
      namespace: *namespace
  wait: true
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/kustomize.toolkit.fluxcd.io/kustomization_v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app dragonfly-cluster
  namespace: &namespace database
spec:
  interval: 1h
  path: ./kubernetes/apps/database/dragonfly/cluster
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  targetNamespace: *namespace
  dependsOn:
    - name: dragonfly
      namespace: *namespace
  postBuild:
    substitute:
      APP: cluster
      DRAGONFLY_REQUESTS_MEMORY: 256Mi
  components:
    - ../../../../components/dragonfly
  healthChecks:
    - apiVersion: &dragonflyVersion dragonflydb.io/v1alpha1
      kind: &dragonflyKind Dragonfly
      name: *app
      namespace: *namespace
  healthCheckExprs:
    - apiVersion: *dragonflyVersion
      kind: *dragonflyKind
      failed: status.phase != 'ready' && status.phase != 'Ready'
      current: status.phase == 'ready' || status.phase == 'Ready'
  patches:
    - target:
        kind: *dragonflyKind
      # immich needs this for bullmq, this has some pretty big performance implications though
      patch: |-
        - op: add
          path: /spec/args/-
          value: --default_lua_flags=allow-undeclared-keys
