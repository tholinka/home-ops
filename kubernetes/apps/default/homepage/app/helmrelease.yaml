---
# yaml-language-server: $schema=https://flux.tholinka.dev/helmrelease/v2/github/bjw-s/helm-charts/main/charts/library/common
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app homepage
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: warn
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      homepage:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: ghcr.io/gethomepage/homepage
              tag: v1.1.1@sha256:be49a60307fcce7909acdaf2f3b2f3d168a0468d62869bf72d380625dde91fb9
            env:
              HOMEPAGE_ALLOWED_HOSTS: '${SECRET_DOMAIN:=test},{{ .Release.Name }}.${SECRET_DOMAIN}'
            envFrom:
              - secretRef:
                  name: homepage-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 15m
                memory: 200M
              limits:
                memory: 1G
    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 3000
    serviceAccount:
      create: true
      name: *app
    rbac:
      roles:
        homepage:
          type: ClusterRole
          rules:
            - apiGroups:
                - ''
              resources:
                - namespaces
                - pods
                - nodes
              verbs:
                - get
                - list
            - apiGroups:
                - extensions
                - networking.k8s.io
              resources:
                - ingresses
              verbs:
                - get
                - list
            - apiGroups:
                - gateway.networking.k8s.io
              resources:
                - httproutes
                - gateways
              verbs:
                - get
                - list
            - apiGroups:
                - metrics.k8s.io
              resources:
                - nodes
                - pods
              verbs:
                - get
                - list
            - apiGroups:
                - apiextensions.k8s.io
              resources:
                - customresourcedefinitions/status
              verbs:
                - get
                - list
            - apiGroups:
                - metrics.k8s.io
              resources:
                - nodes
                - pods
              verbs:
                - get
                - list
      bindings:
        homepage:
          type: ClusterRoleBinding
          subjects:
            - kind: ServiceAccount
              name: *app
              namespace: default # ensure matches app
          roleRef:
            apiGroup: rbac.authorization.k8s.io
            kind: ClusterRole
            name: *app

    route:
      app:
        hostnames:
          - '{{ .Release.Name }}.${SECRET_DOMAIN}'
          - '${SECRET_DOMAIN:=test}'
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
          - name: internal
            namespace: network
            sectionName: https-root
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        type: configMap
        name: homepage-config
        globalMounts:
          - subPath: bookmarks.yaml
            path: /app/config/bookmarks.yaml
          - subPath: docker.yaml
            path: /app/config/docker.yaml
          - subPath: kubernetes.yaml
            path: /app/config/kubernetes.yaml
          - subPath: services.yaml
            path: /app/config/services.yaml
          - subPath: settings.yaml
            path: /app/config/settings.yaml
          - subPath: widgets.yaml
            path: /app/config/widgets.yaml
