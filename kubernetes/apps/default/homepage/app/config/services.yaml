---
- Home:
    - Home Assistant:
        href: https://ha.${SECRET_DOMAIN}
        icon: home-assistant.png
        #description: Home Assistant
        app: home-assistant
        namespace: default
        widget:
          type: homeassistant
          url: http://home-assistant.default.svc.cluster.local.:8123
          key: '{{HOMEPAGE_VAR_HA_TOKEN}}'
          custom:
            - template: "{{ states.person|selectattr('state','equalto','home')|list|length }} / {{ states.person|list|length }}"
              label: homeassistant.people_home
            - template: "{{ states.light|selectattr('state','equalto','on')|list|length }} / {{ states.light|list|length }}"
              label: homeassistant.lights_on

- Media:
    - Autobrr:
        icon: autobrr.svg
        href: https://autobrr.${SECRET_DOMAIN}
        #description: Download Automation
        app: autobrr
        namespace: media
        widget:
          type: autobrr
          url: http://autobrr.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_AUTOBRR_TOKEN}}'
    - Bazarr:
        icon: bazarr.svg
        href: https://bazarr.${SECRET_DOMAIN}
        #description: Subtitles Management
        app: bazarr
        namespace: media
        widget:
          type: bazarr
          url: http://bazarr.media.svc.cluster.local.:6767
          key: '{{HOMEPAGE_VAR_BAZARR_TOKEN}}'
    - Calibre Web Automated:
        icon: calibre-web.svg
        href: https://calibre.${SECRET_DOMAIN}
        app: calibre-web-automated
        namespace: media
        widget:
          type: calibreweb
          url: http://calibre-web-automated.media.svc.cluster.local.:8083
          username: '{{HOMEPAGE_VAR_CALIBRE_USER}}'
          password: '{{HOMEPAGE_VAR_CALIBRE_PASS}}'
    - Jellyseerr:
        icon: jellyseerr.svg
        href: https://requests.${SECRET_DOMAIN}
        app: jellyseerr
        namespace: media
        widget:
          type: jellyseerr
          url: http://jellyseerr.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_JELLYSEERR_TOKEN}}'
    - Kavita:
        href: https://kavita.${SECRET_DOMAIN}
        icon: kavita.svg
        app: kavita
        namespace: media
        widget:
          type: kavita
          url: http://kavita.media.svc.cluster.local.:5000
          key: '{{HOMEPAGE_VAR_KAVITA_TOKEN}}'
    - Plex:
        icon: plex.svg
        href: https://plex.${SECRET_DOMAIN}
        #description: Media Server
        app: plex
        namespace: media
        widget:
          type: plex
          url: http://plex.media.svc.cluster.local.:32400
          key: '{{HOMEPAGE_VAR_PLEX_TOKEN}}'
          enableNowPlaying: true
    - Prowlarr:
        icon: prowlarr.svg
        href: https://prowlarr.${SECRET_DOMAIN}
        app: prowlarr
        namespace: media
        widget:
          type: prowlarr
          url: http://prowlarr.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_PROWLARR_TOKEN}}'
    - qBittorrent:
        icon: qbittorrent.svg
        href: https://qb.${SECRET_DOMAIN}
        app: qbittorrent
        namespace: media
        widget:
          type: qbittorrent
          url: http://qbittorrent.media.svc.cluster.local.:80
          enableLeechProgress: true # optional, defaults to false
    - Radarr:
        href: https://radarr.${SECRET_DOMAIN}
        icon: radarr.svg
        #description: Movies
        app: radarr
        namespace: media
        widget:
          type: radarr
          url: http://radarr.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_RADARR_TOKEN}}'
    - Readarr:
        href: https://readarr.${SECRET_DOMAIN}
        icon: readarr.svg
        app: readarr
        namespace: media
        widget:
          type: readarr
          url: http://readarr.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_READARR_TOKEN}}'
    - SABnzbd:
        icon: sabnzbd.svg
        href: https://sab.${SECRET_DOMAIN}
        app: sabnzbd
        namespace: media
        widget:
          type: sabnzbd
          url: http://sabnzbd.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_SABNZBD_TOKEN}}'
    - Sonarr:
        href: https://sonarr.${SECRET_DOMAIN}
        icon: sonarr.svg
        #description: TV Shows
        app: sonarr
        namespace: media
        widget:
          type: sonarr
          url: http://sonarr.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_SONARR_TOKEN}}'
    - Tautulli:
        icon: tautulli.svg
        href: https://tautulli.${SECRET_DOMAIN}
        app: plex
        namespace: media
        widget:
          type: tautulli
          url: http://tautulli.media.svc.cluster.local.:80
          key: '{{HOMEPAGE_VAR_TAUTULLI_TOKEN}}'
          enableNowPlaying: true
    ### no widgets at bottom of list
    - Calibre Web Automated Book Downloader:
        href: https://calibre-downloader.${SECRET_DOMAIN}
        icon: calibre.svg
        app: calibre-downloader
        namespace: media
    - Maintainerr:
        href: https://maintainerr.${SECRET_DOMAIN}
        icon: maintainerr.svg
        app: maintainerr
        namespace: media
    - Wizarr:
        icon: wizarr.svg
        href: https://join.${SECRET_DOMAIN}
        app: wizarr
        namespace: media
    - Your Spotify:
        icon: your-spotify.svg
        href: https://ys.${SECRET_DOMAIN}
        app: your-spotify
        namespace: media

- Infrastructure:
    - Unifi: # homepage doesn't support TLSRoute. Container doesn't have tls stuff installed, so it can't connect over https to unifi
        icon: unifi.svg
        href: https://unifi.${SECRET_DOMAIN}
        #description: Unifi Network Application
        app: unifi
        namespace: network

- Calendar:
    - Agenda:
        widget:
          type: calendar
          view: agenda # optional - possible values monthly, agenda
          maxEvents: 5 # optional - defaults to 10
          integrations: # optional
            - type: sonarr # active widget type that is currently enabled on homepage - possible values: radarr, sonarr, lidarr, readarr, ical
              service_group: Media # group name where widget exists
              service_name: Sonarr # service name for that widget
            - type: radarr # active widget type that is currently enabled on homepage - possible values: radarr, sonarr, lidarr, readarr, ical
              service_group: Media # group name where widget exists
              service_name: Radarr # service name for that widget
