---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app readarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: enabled
    ignore:
      - paths: [/spec/replicas]
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      readarr:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/readarr
              tag: 0.4.18.2805@sha256:8f7551205fbdccd526db23a38a6fba18b0f40726e63bb89be0fb2333ff4ee4cd
            env:
              READARR__APP__INSTANCENAME: Readarr
              READARR__APP__THEME: dark
              READARR__AUTH__METHOD: External
              READARR__AUTH__REQUIRED: DisabledForLocalAddresses
              READARR__LOG__DBENABLED: 'False'
              READARR__LOG__LEVEL: info
              READARR__SERVER__PORT: &port 80
              READARR__UPDATE__BRANCH: develop
            envFrom:
              - secretRef:
                  name: readarr-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 1Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
    defaultPodOptions:
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        hostnames:
          - '{{ .Release.Name }}.${SECRET_DOMAIN}'
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
        rules:
          - backendRefs: [{}]
    persistence:
      config:
        existingClaim: *app
      config-cache:
        existingClaim: readarr-cache
        globalMounts:
          - path: /config/MediaCover
      tmp:
        type: emptyDir
      scripts:
        type: configMap
        name: readarr-configmap
        defaultMode: 0775
        globalMounts:
          - path: /scripts/pushover-notifier.sh
            subPath: pushover-notifier.sh
            readOnly: true
      media:
        type: nfs
        server: nas.servers.internal
        path: /media
        globalMounts:
          - path: /media
      media-qbit:
        type: nfs
        server: nas.servers.internal
        path: /media/downloads/qbittorrent
        globalMounts:
          - path: /media/downloads/qbittorrent
            readOnly: true
