---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app your-spotify
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  driftDetection:
    mode: warn
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      server:
        annotations:
          reloader.stakater.com/auto: 'true'
        containers:
          app:
            image:
              repository: yooooomi/your_spotify_server
              tag: 1.12.0@sha256:081b53a4faf529b7e8ceb0147ba10f4780730b729aebf2edb469a8c30441e99a
            env:
              # Caveat if it includes Spotify in name: https://github.com/Yooooomi/your_spotify/pull/254
              API_ENDPOINT: &api_endpoint https://ys.${SECRET_DOMAIN}/api
              CLIENT_ENDPOINT: https://ys.${SECRET_DOMAIN}
              MONGO_ENDPOINT: mongodb://your-spotify:$(DB_PASSWORD)@mongo-your-spotify-0.mongo-your-spotify-svc.database.svc.cluster.local/your-spotify
              PORT: &port 8080
              MONGO_NO_ADMIN_RIGHTS: 'true'
            envFrom:
              - secretRef:
                  name: your-spotify-secret
            probes: &probes
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
            securityContext: &securityContext
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ['ALL'] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 500Mi
      web:
        containers:
          app:
            image:
              repository: yooooomi/your_spotify_client
              tag: 1.13.0@sha256:1da7816f1c45a917f0b5ccc5fc8f04fe3c9d874352ba3206f4ea6bb0891930a7
            env:
              API_ENDPOINT: *api_endpoint
            probes: *probes
            securityContext: *securityContext
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 100Mi
    service:
      server:
        controller: server
        primary: true
        ports:
          http:
            port: *port
      web:
        controller: web
        ports:
          http:
            port: &webport 3000
    route:
      app:
        hostnames:
          - '{{ .Release.Name }}.${SECRET_DOMAIN}'
          - 'ys.${SECRET_DOMAIN}'
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        rules:
          - matches:
              - path:
                  type: PathPrefix
                  value: '/api'
            filters:
              - type: URLRewrite
                urlRewrite:
                  path:
                    type: ReplacePrefixMatch
                    replacePrefixMatch: '/'
            backendRefs:
              - name: server
                port: *port
          - matches:
              - path:
                  type: PathPrefix
                  value: '/'
            backendRefs:
              - name: web
                port: *webport
