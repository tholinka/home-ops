---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app calibre-web-automated
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      calibre-web-automated:
        containers:
          app:
            image:
              repository: docker.io/crocodilestick/calibre-web-automated
              tag: V3.0.4@sha256:e602e73b6fd50c3ba389b38acb701205976a05b650898f615f93bd7e3537a827
            env:
              CACHE_DIR: /cache
              CALIBRE_PORT: &port 80
              PUID: 1000
              PGID: 1000
              DOCKER_MODS: >-
                {{- $items := list
                  "// renovate: lsio-docker-mod"
                  "ghcr.io/linuxserver/mods:universal-calibre-v7.16.0"
                -}}
                {{- $filtered := list -}}
                {{- range $item := $items -}}
                  {{- if not (hasPrefix "//" $item) -}}
                    {{- $filtered = append $filtered $item -}}
                  {{- end -}}
                {{- end -}}
                {{- $filtered | join "|" -}}
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            securityContext:
              allowPrivilegeEscalation: false
              # readOnlyRootFilesystem: true # dumb s6 image
              # capabilities: { drop: ['ALL'] } # dumb s6 image needs to start as root and then it chowns and drops capabilities
            resources:
              requests:
                cpu: 5m
                memory: 128Mi
              limits:
                memory: 512Mi
    # defaultPodOptions: # dumb s6 image
    #   automountServiceAccountToken: false
    #   enableServiceLinks: false
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 1000
    #     runAsGroup: 1000
    #     fsGroup: 1000
    #     fsGroupChangePolicy: 'OnRootMismatch'

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    route:
      app:
        hostnames:
          - calibre.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        existingClaim: *app
        globalMounts:
          - path: /config
            subPath: config
          - path: /calibre-library
            subPath: library
          - path: /cwa-book-ingest
            subPath: downloads
      data-cache:
        existingClaim: calibre-web-automated-cache
        globalMounts:
          - path: /cache
      # media:
      #   type: nfs
      #   server: nas.servers.internal
      #   path: /media
      #   globalMounts:
      #     - path: /calibre-library
      #       subPath: books
      #     - path: /cwa-book-ingest
      #       subPath: downloads/openbooks
