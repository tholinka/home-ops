---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/kustomization-kustomize-v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app crds-ready
  namespace: &namespace flux-system
spec:
  targetNamespace: *namespace
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  path: ./kubernetes/apps/flux-system/healthcheck/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  wait: false
  interval: 1h
  retryInterval: 2m
  timeout: 5m
  healthChecks:
    - &crds
      apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: replicationsources.volsync.backube
    - <<: *crds
      name: replicationdestinations.volsync.backube
    - <<: *crds
      name: externalsecrets.external-secrets.io
    - <<: *crds
      name: servicemonitors.monitoring.coreos.com
    - <<: *crds
      name: podmonitors.monitoring.coreos.com
    - <<: *crds
      name: ciliumnetworkpolicies.cilium.io
    - <<: *crds
      name: ciliumclusterwidenetworkpolicies.cilium.io
    - <<: *crds
      name: certificates.cert-manager.io
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/kustomization-kustomize-v1.json
apiVersion: kustomize.toolkit.fluxcd.io/v1
kind: Kustomization
metadata:
  name: &app storage-ready
  namespace: &namespace flux-system
spec:
  targetNamespace: *namespace
  commonMetadata:
    labels:
      app.kubernetes.io/name: *app
  path: ./kubernetes/apps/flux-system/healthcheck/app
  prune: true
  sourceRef:
    kind: GitRepository
    name: flux-system
    namespace: flux-system
  wait: false
  interval: 1h
  retryInterval: 2m
  timeout: 5m
  healthChecks:
    - apiVersion: ceph.rook.io/v1
      kind: CephCluster
      name: rook-ceph
      namespace: rook-ceph
    - apiVersion: apps/v1
      kind: Deployment
      name: volsync
      namespace: volsync-system
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: replicationsources.volsync.backube
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: replicationdestinations.volsync.backube
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: externalsecrets.external-secrets.io
  healthCheckExprs:
    - apiVersion: ceph.rook.io/v1
      kind: CephCluster
      failed: status.ceph.health == 'HEALTH_ERR'
      current: status.ceph.health in ['HEALTH_OK', 'HEALTH_WARN']
