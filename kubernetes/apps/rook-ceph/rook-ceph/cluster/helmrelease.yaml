---
# yaml-language-server: $schema=https://schemas.tholinka.dev/source.toolkit.fluxcd.io/ocirepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: OCIRepository
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  layerSelector:
    mediaType: application/vnd.cncf.helm.chart.content.v1.tar+gzip
    operation: copy
  ref:
    tag: v1.18.4
  url: oci://ghcr.io/rook/rook-ceph-cluster
---
# yaml-language-server: $schema=https://schemas.tholinka.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
spec:
  interval: 1h
  timeout: 15m
  chartRef:
    kind: OCIRepository
    name: rook-ceph-cluster
  driftDetection:
    ignore:
      - paths: ['']
        target:
          kind: CephCluster
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    toolbox:
      enabled: true
    route:
      dashboard:
        annotations:
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: Infrastructure
          gethomepage.dev/name: Rook Ceph
          gethomepage.dev/icon: rook.svg
          gethomepage.dev/pod-selector: ceph-mgr
        host:
          name: rook.${SECRET_DOMAIN}
          path: /
          pathType: PathPrefix
        parentRefs:
          - name: internal
            namespace: network
            sectionName: https
    cephClusterSpec:
      cephConfig:
        global: # all values must be string
          bdev_enable_discard: 'true'
          bdev_async_discard_threads: '1'
          osd_class_update_on_start: 'false'
          bluestore_slow_ops_warn_threshold: '5' # https://docs.ceph.com/en/latest/rados/operations/health-checks/#bluestore-slow-op-alert default is 1
          bluestore_slow_ops_warn_lifetime: '10' # https://docs.ceph.com/en/latest/rados/operations/health-checks/#bluestore-slow-op-alert default is 86400 (24 hrs)
          device_failure_prediction_mode: local # doesn't do anything without mgr module
          mon_data_avail_warn: '10' # default is 30%
      cleanupPolicy:
        wipeDevicesFromOtherClusters: true
      crashCollector:
        disable: false
      csi:
        readAffinity:
          enabled: true
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
        prometheusEndpoint: http://prometheus-operated.observability.svc.cluster.local:9090
      mgr:
        modules:
          # Module 'diskprediction_local' has failed: No module named 'sklearn.svm.classes'
          # - name: diskprediction_local
          #   enabled: true
          - name: insights
            enabled: true
          - name: pg_autoscaler
            enabled: true
          - name: rook
            enabled: true
      network:
        provider: host
        connections:
          requireMsgr2: true
      storage:
        useAllNodes: false
        nodes:
          - name: lenovo-m700-1
          - name: lenovo-m700-2
          - name: lenovo-m700-3
          - name: hp-800-g5-1
          - name: hp-400-g5-2
        useAllDevices: false
        devicePathFilter: ^/dev/disk/by-id/(ata-SPCC_M.2_SSD_|nvme-SPCC_M.2_PCIe_SSD_).*
        config:
          encryptedDevice: 'true'
          osdsPerDevice: '1'
      resources:
        mgr:
          limits:
            memory: 1Gi # default
          requests:
            cpu: 200m # 500m is default
            memory: 768Mi #512Mi is default
        mon:
          limits:
            memory: 2Gi # default
          requests:
            cpu: 500m # 1000m is default
            memory: 512Mi # 1Gi is default
        osd:
          limits:
            memory: 4Gi # default
          requests:
            cpu: 500m # 1000m is default
            memory: 1Gi # 4Gi is default
    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
          enableRBDStats: true
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          mountOptions: ['discard']
          parameters:
            compression_mode: aggressive
            compression_algorithm: zstd
            imageFormat: '2'
            imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: '{{ .Release.Namespace }}'
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: '{{ .Release.Namespace }}'
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: '{{ .Release.Namespace }}'
            csi.storage.k8s.io/fstype: ext4
    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-blockpool
      isDefault: false
      deletionPolicy: Delete
    cephFileSystems:
      - name: &cephFileSystemName ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: data0
          metadataServer:
            activeCount: 1
            activeStandby: true
            priorityClassName: system-cluster-critical
            placement:
              topologySpreadConstraints:
                - maxSkew: 1
                  topologyKey: kubernetes.io/hostname
                  whenUnsatisfiable: DoNotSchedule
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: ceph-mds
                      app.kubernetes.io/part-of: *cephFileSystemName
            resources:
              requests:
                cpu: 100m
                memory: 1Gi
              limits:
                memory: 4Gi
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          pool: data0
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          volumeBindingMode: Immediate
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: '{{ .Release.Namespace }}'
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: '{{ .Release.Namespace }}'
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: '{{ .Release.Namespace }}'
            csi.storage.k8s.io/fstype: ext4
    cephFileSystemVolumeSnapshotClass:
      enabled: true
      name: csi-ceph-filesystem
      isDefault: false
      deletionPolicy: Delete
    cephObjectStores: []
