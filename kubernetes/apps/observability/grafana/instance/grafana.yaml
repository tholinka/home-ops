---
# yaml-language-server: $schema=https://schemas.tholinka.dev/grafana.integreatly.org/grafana_v1beta1.json
apiVersion: grafana.integreatly.org/v1beta1
kind: Grafana
metadata:
  name: grafana
  labels:
    grafana.internal/instance: grafana
spec:
  config:
    analytics:
      check_for_updates: 'false'
      check_for_plugin_updates: 'false'
      feedback_links_enabled: 'false'
      reporting_enabled: 'false'
    auth:
      disable_login_form: 'false'
      signout_redirect_url: https://auth.${SECRET_DOMAIN}/application/o/grafana/end-session/
      oauth_auto_login: 'true'
      oauth_allow_insecure_email_lookup: 'true'
    auth.anonymous:
      enabled: 'true'
      org_id: '1'
      org_name: Main Org.
      org_role: Viewer
      hide_version: 'true'
    auth.generic_oauth:
      name: authentik
      enabled: 'true'
      scopes: openid email profile
      auth_url: https://auth.${SECRET_DOMAIN}/application/o/authorize/
      token_url: https://auth.${SECRET_DOMAIN}/application/o/token/
      api_url: https://auth.${SECRET_DOMAIN}/application/o/userinfo/
      # Optionally map user groups to Grafana roles
      role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Editors') && 'Editor' || 'Viewer'
    log:
      mode: console
    metrics:
      enabled: 'true'
    news:
      news_feed_enabled: 'false'
    plugins:
      plugin_admin_enabled: 'false'
    security:
      angular_support_enabled: 'true'
    server:
      enable_gzip: 'true'
      root_url: https://grafana.${SECRET_DOMAIN}
  deployment:
    spec:
      strategy:
        type: Recreate
      template:
        spec:
          containers:
            - name: grafana
              env:
                - name: &clientId GF_AUTH_GENERIC_OAUTH_CLIENT_ID
                  valueFrom:
                    secretKeyRef:
                      name: &secret grafana-secret
                      key: *clientId
                - name: &clientSecret GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET
                  valueFrom:
                    secretKeyRef:
                      name: *secret
                      key: *clientSecret
                - name: &adminPass GF_SECURITY_ADMIN_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: *secret
                      key: *adminPass
                - name: GF_DATE_FORMATS_USE_BROWSER_LOCALE
                  value: 'true'
                - name: GF_SECURITY_COOKIE_SAMESITE
                  value: grafana
              securityContext:
                allowPrivilegeEscalation: false
                readOnlyRootFilesystem: true
                capabilities: { drop: ['ALL'] }
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            fsGroup: 1000
            fsGroupChangePolicy: OnRootMismatch
          volumes:
            - name: grafana-data
              persistentVolumeClaim:
                claimName: grafana-pvc
  persistentVolumeClaim:
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 10Gi
      storageClassName: ceph-block
  disableDefaultSecurityContext: All
