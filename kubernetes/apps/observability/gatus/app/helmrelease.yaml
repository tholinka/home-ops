---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gatus
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      *app :
        annotations:
          reloader.stakater.com/auto: 'true'
        initContainers:
          sidecar:
            image:
              repository: ghcr.io/home-operations/gatus-sidecar
              tag: 0.0.9@sha256:31a52dd0e579c1f865b2580a4bb715d2a893deb1351fedeaba73598e9a578cbe
            args:
              - --auto-httproute
              - --enable-httproute
              - --enable-service
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 64Mi
            restartPolicy: Always
        containers:
          app:
            image:
              repository: ghcr.io/twin/gatus
              tag: v5.27.1@sha256:f7cc027fe09ddddcb1204225200872f6d7eedbbaaccdee318e6501e3e82866fd
            env:
              GATUS_CONFIG_PATH: /config
              GATUS_DELAY_START_SECONDS: 5
              GATUS_WEB_PORT: &port 80
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ['ALL'] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 256Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch

    service:
      app:
        ports:
          http:
            port: *port

    serviceMonitor:
      app:
        endpoints:
          - port: http

    route:
      app:
        hostnames:
          - status.${SECRET_DOMAIN}
        parentRefs:
          - name: external
            namespace: network
            sectionName: https
        annotations:
          gethomepage.dev/enabled: 'true'
          gethomepage.dev/group: Observability
          gethomepage.dev/name: Gatus
          gethomepage.dev/icon: gatus.svg
          gethomepage.dev/widget.type: *app
          gethomepage.dev/widget.url: 'http://{{ .Release.Name }}.observability.svc.cluster.local.:80'
    serviceAccount:
      *app : {}

    persistence:
      config:
        existingClaim: *app

      config-file:
        type: configMap
        name: '{{ .Release.Name }}-configmap'
        globalMounts:
          - path: /config/config.yaml
            subPath: config.yaml
            readOnly: true

      secret:
        type: secret
        name: '{{ .Release.Name }}-secret'
        globalMounts:
          - path: /config/secret.yaml
            subPath: config.yaml

    rbac:
      roles:
        *app :
          type: ClusterRole
          rules:
            - apiGroups: ['']
              resources: [services]
              verbs: [get, watch, list]
            - apiGroups: [gateway.networking.k8s.io]
              resources: [gateways, httproutes]
              verbs: [get, watch, list]
      bindings:
        *app :
          type: ClusterRoleBinding
          roleRef:
            identifier: *app
          subjects:
            - identifier: *app
